//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechnicalQLThongTin.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TechnicalEntities : DbContext
    {
        public TechnicalEntities()
            : base("name=TechnicalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employees { get; set; }
    
        public virtual int Employees_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employees_Delete", iDParameter);
        }
    
        public virtual int Employees_insert(string maNV, string hoTen, Nullable<System.DateTime> namSinh, string email, string dienThoai, string diaChi)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var namSinhParameter = namSinh.HasValue ?
                new ObjectParameter("NamSinh", namSinh) :
                new ObjectParameter("NamSinh", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var dienThoaiParameter = dienThoai != null ?
                new ObjectParameter("DienThoai", dienThoai) :
                new ObjectParameter("DienThoai", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employees_insert", maNVParameter, hoTenParameter, namSinhParameter, emailParameter, dienThoaiParameter, diaChiParameter);
        }
    
        public virtual ObjectResult<Employees_searchByID_Result> Employees_searchByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employees_searchByID_Result>("Employees_searchByID", iDParameter);
        }
    
        public virtual int Employees_update(Nullable<int> iD, string maNV, string hoTen, Nullable<System.DateTime> namSinh, string email, string dienThoai, string diaChi)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var namSinhParameter = namSinh.HasValue ?
                new ObjectParameter("NamSinh", namSinh) :
                new ObjectParameter("NamSinh", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var dienThoaiParameter = dienThoai != null ?
                new ObjectParameter("DienThoai", dienThoai) :
                new ObjectParameter("DienThoai", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employees_update", iDParameter, maNVParameter, hoTenParameter, namSinhParameter, emailParameter, dienThoaiParameter, diaChiParameter);
        }
    }
}
